spring.application.name=order-service
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/order-service
spring.datasource.username=root
spring.datasource.password=Root@

spring.jpa.hibernate.ddl-auto=update

server.port=8081

spring.cloud.bootstrap.enabled=true

#data.uri=http://inventory-service/api/inventory
data.uri=http://localhost:8980/api/inventory

#eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka


# Actuator configuration
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

# Resilience4J properties
resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.inventory.SlidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.inventory.SlidingWindowSize=5
# after 5 failure request circuitbreaker changes from closed to open state
resilience4j.circuitbreaker.instances.inventory.failureRateThreshold=50
resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState=5s
# we apply resilience4j fallback mechanism in this open state for 5seconds
# after that it will go to the half open state automatically
resilience4j.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOPenState=3
# it allows only 3 calls if it still fails in 3 call then it will go to open state
resilience4j.circuitbreaker.instances.inventory.automaticTransitionFromOpenToHalfOpenEnabled=true

# resilience4j timeout properties
resilience4j.timelimiter.instances.inventory.timeout-duration=3s

#resilience4j retry properties
resilience4j.retry.instances.inventory.max-attempts=3
resilience4j.retry.instances.inventory.wait-duration=5s

